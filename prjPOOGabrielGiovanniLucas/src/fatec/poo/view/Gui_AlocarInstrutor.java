/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fatec.poo.view;

import fatec.poo.control.Conexao;
import fatec.poo.control.DaoCurso;
import fatec.poo.control.DaoInstrutor;
import fatec.poo.control.DaoTurma;
import fatec.poo.model.Curso;
import fatec.poo.model.Instrutor;
import fatec.poo.model.Turma;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 *
 * @author Gabriel Pilan
 */
public class Gui_AlocarInstrutor extends javax.swing.JFrame {

    /**
     * Creates new form Gui_AlocarInstrutor
     */
    public Gui_AlocarInstrutor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbCurso = new javax.swing.JComboBox<>();
        cmbTurma = new javax.swing.JComboBox<>();
        cmbInstrutor = new javax.swing.JComboBox<>();
        txtSituacao = new javax.swing.JTextField();
        btnAlocar = new javax.swing.JButton();
        btnLiberar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Alocar Instrutor");
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Curso");

        jLabel2.setText("Turma");

        jLabel3.setText("Instrutor");

        jLabel4.setText("Situacao");

        cmbCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCursoActionPerformed(evt);
            }
        });

        cmbTurma.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTurmaItemStateChanged(evt);
            }
        });
        cmbTurma.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                cmbTurmaAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        cmbTurma.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cmbTurmaMouseMoved(evt);
            }
        });
        cmbTurma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbTurmaFocusGained(evt);
            }
        });
        cmbTurma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbTurmaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbTurmaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbTurmaMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cmbTurmaMouseReleased(evt);
            }
        });
        cmbTurma.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                cmbTurmaComponentMoved(evt);
            }
        });
        cmbTurma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTurmaActionPerformed(evt);
            }
        });

        txtSituacao.setEditable(false);
        txtSituacao.setBackground(new java.awt.Color(153, 153, 153));
        txtSituacao.setBorder(javax.swing.BorderFactory.createBevelBorder(1));
        txtSituacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSituacaoActionPerformed(evt);
            }
        });

        btnAlocar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/add.png"))); // NOI18N
        btnAlocar.setText("Alocar");
        btnAlocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlocarActionPerformed(evt);
            }
        });

        btnLiberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/Eraser.png"))); // NOI18N
        btnLiberar.setText("Liberar");
        btnLiberar.setEnabled(false);
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fatec/poo/view/icon/exit.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlocar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(71, 71, 71)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbInstrutor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 138, Short.MAX_VALUE)))))))
                .addGap(18, 18, 18)
                .addComponent(btnLiberar)
                .addGap(17, 17, 17)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbCurso, cmbTurma, txtSituacao});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlocar, btnLiberar, btnSair});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbInstrutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAlocar)
                    .addComponent(btnLiberar)
                    .addComponent(btnSair)))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbCurso, cmbInstrutor, cmbTurma, txtSituacao});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAlocar, btnLiberar, btnSair});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSituacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSituacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSituacaoActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed
        //Testar se isso funciona
        
        
        
        
        turmaSigla = (String) cmbTurma.getSelectedItem();
        //instrutorNome = (String) cmbInstrutor.getSelectedItem(); 
        
        turma = daoTurma.consultar(turmaSigla); 
        
        instrutor = arrayInstrutor.get(cmbInstrutor.getSelectedIndex());
        //instrutor = (Instrutor) cmbInstrutor.getSelectedItem();
        
        CPF = instrutor.getCpf();
        
        instrutor.removeTurma(turma); //remover a turma do instrutor
        turma.setInstrutor(null);  //TESTAR SE ISSO FUNCIONA
        
        daoTurma.desalocarInstrutor(CPF, turma); //Armazenando a turma sem Instrutor
        
        txtSituacao.setText("LIBERADA");
        btnAlocar.setEnabled(true);
        btnLiberar.setEnabled(false);
        
        
        
    }//GEN-LAST:event_btnLiberarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void cmbCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCursoActionPerformed
        //Para toda vez que for alterado o Curso trocar as Turmas Relacionadas
      /*  ArrayList<String> array = daoCurso.listar();
            
        for(int i = 0;i<array.size(); i++ ){  
           cmbCurso.addItem(array.get(i).toString());   
        } */
        cursoSigla = (String) cmbCurso.getSelectedItem();
        ArrayList<String> arrayTurma = daoTurma.listar(cursoSigla); // Lista a Turma baseada no Curso Escolhido
        cmbTurma.removeAllItems();
        for(int i = 0;i<arrayTurma.size(); i++ ){  
           cmbTurma.addItem(arrayTurma.get(i).toString());   
        } 
        
        turmaSigla = (String) cmbTurma.getSelectedItem();
        
        
        turma = daoTurma.consultar(turmaSigla);
        
        
         
         instrutor = turma.getInstrutor();
         
         if(instrutor == null){
             System.out.println("Instrutor Nulo");
         
         txtSituacao.setText("TURMA SEM INSTRUTOR");
            btnAlocar.setEnabled(true);
            btnLiberar.setEnabled(false);
         
         }
         
        if(instrutor != null){
            
            System.out.println("Instrutor NAAAAAAAAO Nulo");
            
            cmbInstrutor.setSelectedItem(instrutor.getNome()); // colocar esse objeto na combo box de Instrutor
            
            
            txtSituacao.setText("ALOCADA");
            btnAlocar.setEnabled(false);
            btnLiberar.setEnabled(true);
        }
    }//GEN-LAST:event_cmbCursoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        conexao = new Conexao("BD1711015","BD1711015");    
        conexao.setDriver("oracle.jdbc.driver.OracleDriver");
        conexao.setConnectionString("jdbc:oracle:thin:@apolo:1521:xe");
        daoCurso = new DaoCurso(conexao.conectar());
        daoTurma = new DaoTurma(conexao.conectar());
        daoInstrutor = new DaoInstrutor(conexao.conectar());
        
        ArrayList<String> array = daoCurso.listar();
            
        for(int i = 0;i<array.size(); i++ ){  
           cmbCurso.addItem(array.get(i).toString());   
        } 
        
        cursoSigla = (String) cmbCurso.getSelectedItem();
        
        ArrayList<String> arrayTurma = daoTurma.listar(cursoSigla); // Lista a Turma baseada no Curso Escolhido
        
        cmbTurma.removeAllItems();
        for(int i = 0;i<arrayTurma.size(); i++ ){  
            
           cmbTurma.addItem(arrayTurma.get(i).toString());    
        } 
        
        arrayInstrutor = daoInstrutor.listar();
        
        for(int i = 0;i<arrayInstrutor.size(); i++ ){  
           cmbInstrutor.addItem(arrayInstrutor.get(i).getNome().toString());   
        } 
        
        //TALVEZ DELETAR DPS
        turmaSigla = (String) cmbTurma.getSelectedItem();
        
        
        turma = daoTurma.consultar(turmaSigla);
        
        
         
         instrutor = turma.getInstrutor();
         
         if(instrutor == null){
             System.out.println("Instrutor Nulo");
         
         txtSituacao.setText("TURMA SEM INSTRUTOR");
            btnAlocar.setEnabled(true);
            btnLiberar.setEnabled(false);
         
         }
         
        if(instrutor != null){
            
            System.out.println("Instrutor NAAAAAAAAO Nulo");
            
            cmbInstrutor.setSelectedItem(instrutor.getNome()); // colocar esse objeto na combo box de Instrutor
            
            
            txtSituacao.setText("ALOCADA");
            btnAlocar.setEnabled(false);
            btnLiberar.setEnabled(true);
        }
        
    }//GEN-LAST:event_formWindowOpened

    private void btnAlocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlocarActionPerformed
        //TESTAR SE ISSO FUNCIONA!!!!
       
        
        turmaSigla = (String) cmbTurma.getSelectedItem();
        //instrutorNome = (String) cmbInstrutor.getSelectedItem();
        
        turma = daoTurma.consultar(turmaSigla); 
        
        instrutor = arrayInstrutor.get(cmbInstrutor.getSelectedIndex());
        //instrutor = (Instrutor) cmbInstrutor.getSelectedItem();
        
        instrutor.addTurma(turma); 
        
        
        
        System.out.println(turma.getNome());
        
        System.out.println(instrutor.getNome());        
        
       turma.setInstrutor(instrutor);
       
       System.out.println(turma.getInstrutor().getNome());
        
        CPF = instrutor.getCpf();
        daoTurma.alocarInstrutor(CPF, turma); //Armazenando a turma com o novo Instrutor no BD
        
        
        
        txtSituacao.setText("ALOCADA");
        btnAlocar.setEnabled(false);
        btnLiberar.setEnabled(true);
        
       
        
        
    }//GEN-LAST:event_btnAlocarActionPerformed

    private void cmbTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTurmaActionPerformed
     
     
    }//GEN-LAST:event_cmbTurmaActionPerformed

    private void cmbTurmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseClicked
        turmaSigla = (String) cmbTurma.getSelectedItem();
        
        
        turma = daoTurma.consultar(turmaSigla);
        
        
         
         instrutor = turma.getInstrutor();
         
         if(instrutor == null){
             System.out.println("Instrutor Nulo");
         
         txtSituacao.setText("TURMA SEM INSTRUTOR");
            btnAlocar.setEnabled(true);
            btnLiberar.setEnabled(false);
         
         }
         
        if(instrutor != null){
            
            System.out.println("Instrutor NAAAAAAAAO Nulo");
            
            cmbInstrutor.setSelectedItem(instrutor.getNome()); // colocar esse objeto na combo box de Instrutor
            
            
            txtSituacao.setText("ALOCADA");
            btnAlocar.setEnabled(false);
            btnLiberar.setEnabled(true);
        }     
    }//GEN-LAST:event_cmbTurmaMouseClicked

    private void cmbTurmaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTurmaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaFocusGained

    private void cmbTurmaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTurmaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaItemStateChanged

    private void cmbTurmaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseEntered
turmaSigla = (String) cmbTurma.getSelectedItem();
        
        
        turma = daoTurma.consultar(turmaSigla);
        
        
         
         instrutor = turma.getInstrutor();
         
         if(instrutor == null){
             System.out.println("Instrutor Nulo");
         
         txtSituacao.setText("TURMA SEM INSTRUTOR");
            btnAlocar.setEnabled(true);
            btnLiberar.setEnabled(false);
         
         }
         
        if(instrutor != null){
            
            System.out.println("Instrutor NAAAAAAAAO Nulo");
            
            cmbInstrutor.setSelectedItem(instrutor.getNome()); // colocar esse objeto na combo box de Instrutor
            
            
            txtSituacao.setText("ALOCADA");
            btnAlocar.setEnabled(false);
            btnLiberar.setEnabled(true);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaMouseEntered

    private void cmbTurmaMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaMouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void cmbTurmaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseExited

    }//GEN-LAST:event_cmbTurmaMouseExited

    private void cmbTurmaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseReleased

    }//GEN-LAST:event_cmbTurmaMouseReleased

    private void cmbTurmaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_cmbTurmaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaAncestorMoved

    private void cmbTurmaComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmbTurmaComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTurmaComponentMoved

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui_AlocarInstrutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui_AlocarInstrutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui_AlocarInstrutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui_AlocarInstrutor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui_AlocarInstrutor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlocar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cmbCurso;
    private javax.swing.JComboBox<String> cmbInstrutor;
    private javax.swing.JComboBox<String> cmbTurma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtSituacao;
    // End of variables declaration//GEN-END:variables

    private Conexao conexao = null;
    private DaoCurso daoCurso = null;
    private DaoInstrutor daoInstrutor = null;
    private DaoTurma daoTurma = null;
    private Curso curso = null;
    private Turma turma = null;
    private Instrutor instrutor = null;
    private String cursoSigla = null;
    private String turmaSigla = null;
    private String instrutorNome = null;
    private ArrayList<Instrutor> arrayInstrutor = null;
    private String CPF = null;
}
